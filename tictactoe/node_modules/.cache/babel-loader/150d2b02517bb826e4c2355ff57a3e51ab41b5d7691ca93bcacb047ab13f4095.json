{"ast":null,"code":"import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Square(_ref){let{value,onSquareClick}=_ref;return/*#__PURE__*/_jsx(\"button\",{className:value==='X'?'square X':'square O',onClick:onSquareClick,children:value});}function Board(_ref2){let{xIsNext,squares,onPlay}=_ref2;function handleClick(i){if(calculateWinner(squares)||squares[i]){return;}const nextSquares=squares.slice();if(xIsNext){nextSquares[i]='X';}else{nextSquares[i]='O';}onPlay(nextSquares);}const winner=calculateWinner(squares);let status;let statusColor;if(winner==='X'){statusColor=\"status X\";status=winner+' is the Winner!';}else if(winner==='O'){statusColor=\"status O\";status=winner+' is the Winner!';}else if(squares.every(square=>square!==null)){statusColor=\"status\";status='Draw!';}else{statusColor=\"status\";status=(xIsNext?'X':'O')+\"'s Turn\";}const boardRows=[];for(let i=0;i<3;++i){const row=[];for(let k=0;k<3;k++){const squareIndex=i*3+k;row.push(/*#__PURE__*/_jsx(Square,{value:squares[squareIndex],onSquareClick:()=>handleClick(squareIndex)},squareIndex));}boardRows.push(/*#__PURE__*/_jsx(\"div\",{className:\"board-row\",children:row},i));}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:statusColor,children:status}),boardRows]});}export default function Game(){const[history,setHistory]=useState([Array(9).fill(null)]);const[currentMove,setCurrentMove]=useState(0);const xIsNext=currentMove%2===0;const currentSquares=history[currentMove];function handlePlay(nextSquares){const nextHistory=[...history.slice(0,currentMove+1),nextSquares];setHistory(nextHistory);setCurrentMove(nextHistory.length-1);}function jumpTo(nextMove){setCurrentMove(nextMove);}const moves=history.map((squares,move)=>{let description;if(move===currentMove&&move===0){description='Click to start game';}else if(move===currentMove){description='You are at move '+move;}else if(move>0){description='Go to move '+move;}else{description='Go to game start';}return/*#__PURE__*/_jsx(\"li\",{children:move===currentMove?/*#__PURE__*/_jsx(\"span\",{children:description}):/*#__PURE__*/_jsx(\"button\",{className:\"moves-button\",onClick:()=>jumpTo(move),children:description})},move);});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"ol\",{className:\"game-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-header\",children:\"Game History\"}),moves]})}),/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:\"Tic Tac Toe\"}),/*#__PURE__*/_jsx(\"div\",{className:\"game\",children:/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:/*#__PURE__*/_jsx(Board,{xIsNext:xIsNext,squares:currentSquares,onPlay:handlePlay})})})]});}function calculateWinner(squares){const lines=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(let i=0;i<lines.length;i++){const[a,b,c]=lines[i];if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){return squares[a];}}return null;}","map":{"version":3,"names":["useState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Square","_ref","value","onSquareClick","className","onClick","children","Board","_ref2","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","winner","status","statusColor","every","square","boardRows","row","k","squareIndex","push","Game","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","moves","map","move","description","lines","a","b","c"],"sources":["/Users/kellyung/Desktop/Projects/tictactoe/tictactoe/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className={value === 'X' ? 'square X' : 'square O'} onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  let statusColor;\n  if (winner === 'X') {\n    statusColor = \"status X\"\n    status = winner + ' is the Winner!';\n  } else if (winner === 'O') {\n    statusColor = \"status O\"\n    status = winner + ' is the Winner!';\n  } else if (squares.every(square => square !== null)) { \n    statusColor = \"status\"\n    status = 'Draw!';\n  } else {\n    statusColor = \"status\"\n    status = (xIsNext ? 'X' : 'O') + \"'s Turn\";\n  }\n\n  const boardRows = [];\n  for (let i = 0; i < 3; ++i) {\n    const row = [];\n    for (let k = 0; k < 3; k++) {\n      const squareIndex = i * 3 + k;\n      row.push(\n      <Square \n        key={squareIndex}\n        value={squares[squareIndex]} \n        onSquareClick={() => handleClick(squareIndex)}\n      />\n      );\n    }\n    boardRows.push(<div key={i} className=\"board-row\">{row}</div>);\n  }\n\n  return (\n    <>\n        <div className={statusColor}>{status}</div>\n        {boardRows}\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move === currentMove && move === 0) {\n      description = 'Click to start game';\n    } else if (move === currentMove) {\n      description = 'You are at move ' + move;\n    } else if (move > 0) {\n      description = 'Go to move ' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    \n    return (\n      <li key={move}>\n        {move === currentMove ? (\n          <span>{description}</span>\n        ) : (\n          <button className=\"moves-button\" onClick={() => jumpTo(move)}>{description}</button>\n        )}\n      </li>\n    );\n  });\n\n  return (\n    <>\n    <div>\n        <ol className=\"game-info\">\n          <div className=\"game-header\">Game History</div>\n          {moves}\n        </ol>\n    </div>\n    <div className=\"header\">Tic Tac Toe</div>\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n    </div>\n    </>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}