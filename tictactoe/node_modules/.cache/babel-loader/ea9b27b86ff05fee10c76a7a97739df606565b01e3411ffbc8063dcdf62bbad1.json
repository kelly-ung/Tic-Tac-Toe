{"ast":null,"code":"var _jsxFileName = \"/Users/kellyung/Desktop/Projects/reactdev/tictactoe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  let color;\n  if (value === 'X') {\n    color = 'square green';\n  } else {\n    color = 'square';\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: color,\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner === 'X' || winner === 'O') {\n    status = 'Winner: ' + winner;\n  } else if (squares.every(square => square !== null)) {\n    // checks if every square is not null to determine draw\n    status = 'Draw!';\n  } else {\n    status = (xIsNext ? 'X' : 'O') + \"'s Turn\";\n  }\n\n  // Creating the board\n  const boardRows = [];\n  for (let i = 0; i < 3; ++i) {\n    const row = [];\n    for (let k = 0; k < 3; k++) {\n      const squareIndex = i * 3 + k;\n      row.push( /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[squareIndex],\n        onSquareClick: () => handleClick(squareIndex)\n      }, squareIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this));\n    }\n    boardRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: row\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), boardRows]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move === currentMove && move === 0) {\n      description = 'Click to start game';\n    } else if (move === currentMove) {\n      description = 'You are at move #' + move;\n    } else if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: move === currentMove ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"game-info\",\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          xIsNext: xIsNext,\n          squares: currentSquares,\n          onPlay: handlePlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","color","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","winner","status","every","square","boardRows","row","k","squareIndex","push","_c2","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","moves","map","move","description","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/kellyung/Desktop/Projects/reactdev/tictactoe/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  let color;\n  if (value === 'X') {\n    color = 'square green'\n  } else {\n      color = 'square'\n  }\n  return (\n    <button className={color} onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner === 'X' || winner === 'O') {\n    status = 'Winner: ' + winner;\n  } else if (squares.every(square => square !== null)) { // checks if every square is not null to determine draw\n    status = 'Draw!';\n  } else {\n    status = (xIsNext ? 'X' : 'O') + \"'s Turn\";\n  }\n\n  // Creating the board\n  const boardRows = [];\n  for (let i = 0; i < 3; ++i) {\n    const row = [];\n    for (let k = 0; k < 3; k++) {\n      const squareIndex = i * 3 + k;\n      row.push(\n      <Square \n        key={squareIndex}\n        value={squares[squareIndex]} \n        onSquareClick={() => handleClick(squareIndex)}\n      />\n      );\n    }\n    boardRows.push(<div key={i} className=\"board-row\">{row}</div>);\n  }\n\n  return (\n    <>\n        <div className=\"status\">{status}</div>\n        {boardRows}\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move === currentMove && move === 0) {\n      description = 'Click to start game';\n    } else if (move === currentMove) {\n      description = 'You are at move #' + move;\n    } else if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    \n    return (\n      <li key={move}>\n        {move === currentMove ? (\n          <span>{description}</span>\n        ) : (\n          <button onClick={() => jumpTo(move)}>{description}</button>\n        )}\n      </li>\n    );\n  });\n\n  return (\n    <>\n    <div>\n        <ol className=\"game-info\">{moves}</ol>\n    </div>\n    <div className=\"header\">Tic Tac Toe</div>\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n    </div>\n    </>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}